2019/01/15 16:59:41 [INFO] Terraform version: 0.12.0 alpha1 
2019/01/15 16:59:41 [INFO] Go runtime version: go1.11.1
2019/01/15 16:59:41 [INFO] CLI args: []string{"C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform.exe", "apply"}
2019/01/15 16:59:41 [DEBUG] Attempting to open CLI config file: C:\Users\adminteo\AppData\Roaming\terraform.rc
2019/01/15 16:59:41 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2019/01/15 16:59:41 [INFO] CLI command args: []string{"apply"}
2019/01/15 16:59:41 [INFO] command: no config, returning nil
2019/01/15 16:59:41 [DEBUG] command: no data state file found for backend config
2019/01/15 16:59:41 [DEBUG] New state was assigned lineage "6e683a00-6153-d2c5-37c0-ec280c2d7be4"
2019/01/15 16:59:41 [INFO] command: backend initialized: <nil>
2019/01/15 16:59:41 [DEBUG] checking for provider in "."
2019/01/15 16:59:41 [DEBUG] checking for provider in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2019/01/15 16:59:41 [DEBUG] found provider "terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe"
2019/01/15 16:59:41 [DEBUG] found provider "terraform-provider-azurerm_v1.17.0-4-g4ed5a4b3_x4.exe"
2019/01/15 16:59:41 [DEBUG] found provider "terraform-provider-google_v1.19.1-3-g59efc8b9_x4.exe"
2019/01/15 16:59:41 [DEBUG] found provider "terraform-provider-local_v1.1.0-4-g9b9be32_x4.exe"
2019/01/15 16:59:41 [DEBUG] found provider "terraform-provider-null_v1.0.0-4-g0b90acb_x4.exe"
2019/01/15 16:59:41 [DEBUG] found provider "terraform-provider-random_v2.0.0-4-gb282401_x4.exe"
2019/01/15 16:59:41 [DEBUG] found provider "terraform-provider-template_v1.0.0-4-g17c9029_x4.exe"
2019/01/15 16:59:41 [DEBUG] checking for provider in ".terraform\\plugins\\windows_amd64"
2019/01/15 16:59:41 [DEBUG] found valid plugin: "template", "1.0.0-4-g17c9029", "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform-provider-template_v1.0.0-4-g17c9029_x4.exe"
2019/01/15 16:59:41 [DEBUG] found valid plugin: "aws", "1.40.0-5-g4f24bc8b7", "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe"
2019/01/15 16:59:41 [DEBUG] found valid plugin: "azurerm", "1.17.0-4-g4ed5a4b3", "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform-provider-azurerm_v1.17.0-4-g4ed5a4b3_x4.exe"
2019/01/15 16:59:41 [DEBUG] found valid plugin: "google", "1.19.1-3-g59efc8b9", "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform-provider-google_v1.19.1-3-g59efc8b9_x4.exe"
2019/01/15 16:59:41 [DEBUG] found valid plugin: "local", "1.1.0-4-g9b9be32", "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform-provider-local_v1.1.0-4-g9b9be32_x4.exe"
2019/01/15 16:59:41 [DEBUG] found valid plugin: "null", "1.0.0-4-g0b90acb", "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform-provider-null_v1.0.0-4-g0b90acb_x4.exe"
2019/01/15 16:59:41 [DEBUG] found valid plugin: "random", "2.0.0-4-gb282401", "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools\\terraform-provider-random_v2.0.0-4-gb282401_x4.exe"
2019/01/15 16:59:41 [DEBUG] checking for provisioner in "."
2019/01/15 16:59:41 [DEBUG] checking for provisioner in "C:\\ProgramData\\chocolatey\\lib\\terraform\\tools"
2019/01/15 16:59:41 [DEBUG] checking for provisioner in ".terraform\\plugins\\windows_amd64"
2019/01/15 16:59:41 [INFO] command: backend <nil> is not enhanced, wrapping in local
2019/01/15 16:59:41 [INFO] backend/local: starting Apply operation
2019/01/15 16:59:41 [TRACE] backend/local: requesting state manager for workspace "default"
2019/01/15 16:59:41 [TRACE] backend/local: requesting state lock for workspace "default"
2019/01/15 16:59:41 [TRACE] backend/local: reading remote state for workspace "default"
2019/01/15 16:59:41 [TRACE] backend/local: retrieving the local state snapshot for workspace "default"
2019/01/15 16:59:41 [TRACE] backend/local: building context for current working directory
2019/01/15 16:59:41 [TRACE] terraform.NewContext: starting
2019/01/15 16:59:41 [TRACE] terraform.NewContext: resolving provider version selections
2019/01/15 16:59:41 [TRACE] terraform.NewContext: loading provider schemas
2019/01/15 16:59:41 [TRACE] LoadSchemas: retrieving schema for provider type "aws"
2019-01-15T16:59:41.818-0500 [DEBUG] plugin: starting plugin: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe args=[C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe]
2019-01-15T16:59:42.763-0500 [DEBUG] plugin: plugin started: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=13560
2019-01-15T16:59:42.763-0500 [DEBUG] plugin: waiting for RPC address: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe
2019-01-15T16:59:42.799-0500 [DEBUG] plugin: using plugin: version=5
2019-01-15T16:59:42.799-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2019-01-15T16:59:42.799-0500
2019/01/15 16:59:42 [TRACE] GRPCProvider: GetSchema
2019/01/15 16:59:42 [TRACE] GRPCProvider: PlanResourceChange
2019-01-15T16:59:43.116-0500 [WARN]  plugin: plugin failed to exit gracefully
2019-01-15T16:59:43.128-0500 [DEBUG] plugin: plugin process exited: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=13560 error="exit status 1"
2019/01/15 16:59:43 [TRACE] terraform.NewContext: complete
2019/01/15 16:59:43 [TRACE] backend/local: finished building terraform.Context
2019/01/15 16:59:43 [TRACE] backend/local: requesting interactive input, if necessary
2019/01/15 16:59:43 [TRACE] Context.Input: Prompting for variables
2019/01/15 16:59:43 [TRACE] Context.Input: Prompting for provider arguments
2019/01/15 16:59:43 [TRACE] Context.Input: Provider provider.aws declared at E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:1,1-15
2019/01/15 16:59:43 [TRACE] Context.Input: Input for provider.aws: map[string]cty.Value{}
2019/01/15 16:59:43 [TRACE] backend/local: running validation operation
2019/01/15 16:59:43 [INFO] terraform: building graph: GraphTypeValidate
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ConfigTransformer
2019/01/15 16:59:43 [TRACE] ConfigTransformer: Starting for path: 
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
aws_elb.example - *terraform.NodeValidatableResource
aws_launch_configuration.example - *terraform.NodeValidatableResource
aws_security_group.elb - *terraform.NodeValidatableResource
aws_security_group.instance - *terraform.NodeValidatableResource
data.aws_availability_zones.all - *terraform.NodeValidatableResource
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.LocalTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.OutputTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
aws_elb.example - *terraform.NodeValidatableResource
aws_launch_configuration.example - *terraform.NodeValidatableResource
aws_security_group.elb - *terraform.NodeValidatableResource
aws_security_group.instance - *terraform.NodeValidatableResource
data.aws_availability_zones.all - *terraform.NodeValidatableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.StateTransformer
2019/01/15 16:59:43 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.elb" (*terraform.NodeValidatableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:55,1-36
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.all" (*terraform.NodeValidatableResource) config from hcl.Range{Filename:"E:\\Personal Progamming\\Diplomado UDEA\\Curso II Devops\\TallerFinal\\example.tf", Start:hcl.Pos{Line:7, Column:1, Byte:127}, End:hcl.Pos{Line:7, Column:36, Byte:162}}
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_elb.example" (*terraform.NodeValidatableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:71,1-29
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.instance" (*terraform.NodeValidatableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:10,1-41
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_configuration.example" (*terraform.NodeValidatableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:26,1-46
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.example" (*terraform.NodeValidatableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:41,1-43
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
aws_elb.example - *terraform.NodeValidatableResource
aws_launch_configuration.example - *terraform.NodeValidatableResource
aws_security_group.elb - *terraform.NodeValidatableResource
aws_security_group.instance - *terraform.NodeValidatableResource
data.aws_availability_zones.all - *terraform.NodeValidatableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2019/01/15 16:59:43 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:1,1-15
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
aws_elb.example - *terraform.NodeValidatableResource
aws_launch_configuration.example - *terraform.NodeValidatableResource
aws_security_group.elb - *terraform.NodeValidatableResource
aws_security_group.instance - *terraform.NodeValidatableResource
data.aws_availability_zones.all - *terraform.NodeValidatableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_security_group.instance is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_autoscaling_group.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_security_group.elb is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: data.aws_availability_zones.all is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_elb.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_launch_configuration.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.elb
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_security_group.elb" (*terraform.NodeValidatableResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_availability_zones.all
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "data.aws_availability_zones.all" (*terraform.NodeValidatableResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_elb.example
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_elb.example" (*terraform.NodeValidatableResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_launch_configuration.example
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_launch_configuration.example" (*terraform.NodeValidatableResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.instance
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_security_group.instance" (*terraform.NodeValidatableResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_autoscaling_group.example
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_autoscaling_group.example" (*terraform.NodeValidatableResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_elb.example
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_configuration.example
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.instance
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.example
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.elb
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.all
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_launch_configuration.example" references: [aws_security_group.instance var.amis var.region var.key_name]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.accessKey var.secretAccessKey]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_security_group.instance" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.example" references: [aws_launch_configuration.example data.aws_availability_zones.all aws_elb.example]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_security_group.elb" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.region" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.secretAccessKey" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.all" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.contador" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.public_key_path" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.accessKey" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_elb.example" references: [aws_security_group.elb data.aws_availability_zones.all]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "output.elb_dns_name" references: [aws_elb.example]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.amis" references: []
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeValidatableResource
  aws_elb.example - *terraform.NodeValidatableResource
  aws_launch_configuration.example - *terraform.NodeValidatableResource
aws_elb.example - *terraform.NodeValidatableResource
  aws_security_group.elb - *terraform.NodeValidatableResource
  data.aws_availability_zones.all - *terraform.NodeValidatableResource
aws_launch_configuration.example - *terraform.NodeValidatableResource
  aws_security_group.instance - *terraform.NodeValidatableResource
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeValidatableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeValidatableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  var.contador - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeValidatableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [DEBUG] Starting graph walk: walkValidate
2019/01/15 16:59:43 [TRACE] dag/walk: updating graph
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_autoscaling_group.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_elb.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_launch_configuration.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.public_key_path"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.key_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "root"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.secretAccessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_security_group.elb"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.contador"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "output.elb_dns_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.all"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.amis"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_security_group.instance"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.region"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.accessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.amis"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "aws_security_group.instance"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "data.aws_availability_zones.all"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_security_group.instance" waiting on "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.region"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.accessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.contador"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.public_key_path"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.key_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_autoscaling_group.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "output.elb_dns_name" waiting on "aws_elb.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "aws_security_group.elb"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_elb.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.secretAccessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.elb_dns_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "data.aws_availability_zones.all" waiting on "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_launch_configuration.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_autoscaling_group.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_security_group.elb" waiting on "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_elb.example", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_security_group.instance", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "output.elb_dns_name", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_launch_configuration.example", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_autoscaling_group.example", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "data.aws_availability_zones.all", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_security_group.elb", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.region"
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.contador"
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.accessKey"
2019/01/15 16:59:43 [TRACE] vertex "var.accessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.key_name"
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.public_key_path"
2019/01/15 16:59:43 [TRACE] vertex "var.accessKey": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.amis"
2019/01/15 16:59:43 [TRACE] vertex "var.amis": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.amis": visit complete
2019/01/15 16:59:43 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.region": visit complete
2019/01/15 16:59:43 [TRACE] vertex "var.public_key_path": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.contador": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.contador": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.secretAccessKey"
2019/01/15 16:59:43 [TRACE] vertex "var.secretAccessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.secretAccessKey": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "provider.aws"
2019/01/15 16:59:43 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2019/01/15 16:59:43 [TRACE] vertex "var.public_key_path": visit complete
2019/01/15 16:59:43 [TRACE] vertex "var.key_name": visit complete
2019/01/15 16:59:43 [TRACE] vertex "provider.aws": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: provider.aws
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalInitProvider
2019-01-15T16:59:43.133-0500 [DEBUG] plugin: starting plugin: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe args=[C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe]
2019-01-15T16:59:43.163-0500 [DEBUG] plugin: plugin started: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=2188
2019-01-15T16:59:43.163-0500 [DEBUG] plugin: waiting for RPC address: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe
2019-01-15T16:59:43.212-0500 [DEBUG] plugin: using plugin: version=5
2019-01-15T16:59:43.212-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2019-01-15T16:59:43.212-0500
2019/01/15 16:59:43 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2019/01/15 16:59:43 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2019/01/15 16:59:43 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2019/01/15 16:59:43 [TRACE] GRPCProvider: GetSchema
2019/01/15 16:59:43 [TRACE] GRPCProvider: PrepareProviderConfig
2019/01/15 16:59:43 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:43 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: provider.aws
2019/01/15 16:59:43 [TRACE] vertex "provider.aws": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "aws_security_group.instance"
2019/01/15 16:59:43 [TRACE] vertex "aws_security_group.instance": starting visit (*terraform.NodeValidatableResource)
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "aws_security_group.elb"
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "data.aws_availability_zones.all"
2019/01/15 16:59:43 [TRACE] vertex "data.aws_availability_zones.all": starting visit (*terraform.NodeValidatableResource)
2019/01/15 16:59:43 [TRACE] vertex "data.aws_availability_zones.all": evaluating
2019/01/15 16:59:43 [TRACE] vertex "aws_security_group.elb": starting visit (*terraform.NodeValidatableResource)
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: data.aws_availability_zones.all
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalValidateResource
2019/01/15 16:59:43 [TRACE] vertex "aws_security_group.elb": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: aws_security_group.elb
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalValidateResource
2019/01/15 16:59:43 [TRACE] GRPCProvider: ValidateDataSourceConfig
2019/01/15 16:59:43 [TRACE] vertex "aws_security_group.instance": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: aws_security_group.instance
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalValidateResource
2019/01/15 16:59:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2019/01/15 16:59:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: data.aws_availability_zones.all
2019/01/15 16:59:43 [TRACE] vertex "data.aws_availability_zones.all": visit complete
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.elb
2019/01/15 16:59:43 [TRACE] vertex "aws_security_group.elb": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "aws_elb.example"
2019/01/15 16:59:43 [TRACE] vertex "aws_elb.example": starting visit (*terraform.NodeValidatableResource)
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: aws_security_group.instance
2019/01/15 16:59:43 [TRACE] vertex "aws_security_group.instance": visit complete
2019/01/15 16:59:43 [TRACE] vertex "aws_elb.example": evaluating
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "aws_launch_configuration.example"
2019/01/15 16:59:43 [TRACE] vertex "aws_launch_configuration.example": starting visit (*terraform.NodeValidatableResource)
2019/01/15 16:59:43 [TRACE] vertex "aws_launch_configuration.example": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: aws_launch_configuration.example
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: aws_elb.example
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalValidateResource
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalValidateResource
2019/01/15 16:59:43 [TRACE] GetResourceInstance: aws_security_group.instance is a single instance
2019/01/15 16:59:43 [TRACE] GetResourceInstance: data.aws_availability_zones.all is a single instance
2019/01/15 16:59:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2019/01/15 16:59:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: aws_launch_configuration.example
2019/01/15 16:59:43 [TRACE] vertex "aws_launch_configuration.example": visit complete
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: aws_elb.example
2019/01/15 16:59:43 [TRACE] vertex "aws_elb.example": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "output.elb_dns_name"
2019/01/15 16:59:43 [TRACE] vertex "output.elb_dns_name": starting visit (*terraform.NodeApplyableOutput)
2019/01/15 16:59:43 [TRACE] vertex "output.elb_dns_name": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: output.elb_dns_name
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "aws_autoscaling_group.example"
2019/01/15 16:59:43 [TRACE] vertex "aws_autoscaling_group.example": starting visit (*terraform.NodeValidatableResource)
2019/01/15 16:59:43 [TRACE] vertex "aws_autoscaling_group.example": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: aws_autoscaling_group.example
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalValidateResource
2019/01/15 16:59:43 [TRACE] GetResourceInstance: aws_elb.example is a single instance
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: output.elb_dns_name
2019/01/15 16:59:43 [TRACE] vertex "output.elb_dns_name": visit complete
2019/01/15 16:59:43 [TRACE] GetResourceInstance: aws_elb.example is a single instance
2019/01/15 16:59:43 [TRACE] GetResourceInstance: data.aws_availability_zones.all is a single instance
2019/01/15 16:59:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: aws_autoscaling_group.example
2019/01/15 16:59:43 [TRACE] vertex "aws_autoscaling_group.example": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "provider.aws (close)"
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2019/01/15 16:59:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/01/15 16:59:43 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2019/01/15 16:59:43 [TRACE] vertex "provider.aws (close)": evaluating
2019/01/15 16:59:43 [TRACE] [walkValidate] Entering eval tree: provider.aws (close)
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2019/01/15 16:59:43 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2019/01/15 16:59:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2019-01-15T16:59:43.564-0500 [WARN]  plugin: plugin failed to exit gracefully
2019-01-15T16:59:43.574-0500 [DEBUG] plugin: plugin process exited: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=2188 error="exit status 1"
2019/01/15 16:59:43 [TRACE] [walkValidate] Exiting eval tree: provider.aws (close)
2019/01/15 16:59:43 [TRACE] vertex "provider.aws (close)": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "root"
2019/01/15 16:59:43 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2019/01/15 16:59:43 [TRACE] vertex "root": visit complete
2019/01/15 16:59:43 [INFO] backend/local: apply calling Refresh
2019/01/15 16:59:43 [INFO] terraform: building graph: GraphTypeRefresh
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ConfigTransformer
2019/01/15 16:59:43 [TRACE] ConfigTransformer: Starting for path: 
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
aws_elb.example - *terraform.NodeRefreshableManagedResource
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ConfigTransformer
2019/01/15 16:59:43 [TRACE] ConfigTransformer: Starting for path: 
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
aws_elb.example - *terraform.NodeRefreshableManagedResource
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.StateTransformer
2019/01/15 16:59:43 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_configuration.example" (*terraform.NodeRefreshableManagedResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:26,1-46
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.all" (*terraform.NodeRefreshableDataResource) config from hcl.Range{Filename:"E:\\Personal Progamming\\Diplomado UDEA\\Curso II Devops\\TallerFinal\\example.tf", Start:hcl.Pos{Line:7, Column:1, Byte:127}, End:hcl.Pos{Line:7, Column:36, Byte:162}}
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.example" (*terraform.NodeRefreshableManagedResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:41,1-43
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.elb" (*terraform.NodeRefreshableManagedResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:55,1-36
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_elb.example" (*terraform.NodeRefreshableManagedResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:71,1-29
2019/01/15 16:59:43 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.instance" (*terraform.NodeRefreshableManagedResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:10,1-41
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
aws_elb.example - *terraform.NodeRefreshableManagedResource
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.LocalTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.OutputTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
aws_elb.example - *terraform.NodeRefreshableManagedResource
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
output.elb_dns_name - *terraform.NodeApplyableOutput
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2019/01/15 16:59:43 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:1,1-15
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
aws_elb.example - *terraform.NodeRefreshableManagedResource
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_security_group.instance is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: data.aws_availability_zones.all is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_security_group.elb is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_autoscaling_group.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_elb.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: aws_launch_configuration.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.elb
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_security_group.elb" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_autoscaling_group.example
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_autoscaling_group.example" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_elb.example
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_elb.example" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_launch_configuration.example
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_launch_configuration.example" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.instance
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "aws_security_group.instance" (*terraform.NodeRefreshableManagedResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_availability_zones.all
2019/01/15 16:59:43 [DEBUG] ProviderTransformer: "data.aws_availability_zones.all" (*terraform.NodeRefreshableDataResource) needs provider.aws
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2019/01/15 16:59:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.example
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_elb.example
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_configuration.example
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.instance
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.all
2019/01/15 16:59:43 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.elb
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "output.elb_dns_name" references: [aws_elb.example]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.example" references: [data.aws_availability_zones.all aws_launch_configuration.example aws_elb.example]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_elb.example" references: [data.aws_availability_zones.all aws_security_group.elb]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_launch_configuration.example" references: [aws_security_group.instance var.key_name var.amis var.region]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.amis" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.secretAccessKey var.accessKey]
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.secretAccessKey" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.contador" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_security_group.instance" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.all" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.region" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.accessKey" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "aws_security_group.elb" references: []
2019/01/15 16:59:43 [DEBUG] ReferenceTransformer: "var.public_key_path" references: []
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeRefreshableManagedResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeRefreshableManagedResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeRefreshableManagedResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws (close) - *terraform.graphNodeCloseProvider
  var.contador - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2019/01/15 16:59:43 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
  aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
aws_elb.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResource
  aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeRefreshableManagedResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeRefreshableManagedResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResource
root - terraform.graphNodeRoot
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws (close) - *terraform.graphNodeCloseProvider
  var.contador - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:43 [DEBUG] Starting graph walk: walkRefresh
2019/01/15 16:59:43 [TRACE] dag/walk: updating graph
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.public_key_path"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_autoscaling_group.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.key_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.secretAccessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_launch_configuration.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.accessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.contador"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.all"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_security_group.elb"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "output.elb_dns_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_elb.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "root"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.region"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "var.amis"
2019/01/15 16:59:43 [TRACE] dag/walk: added new vertex: "aws_security_group.instance"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.secretAccessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.amis"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "root" waiting on "var.contador"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.accessKey"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.key_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.region"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_launch_configuration.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_elb.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "aws_security_group.elb"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "root" waiting on "var.public_key_path"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_security_group.instance" waiting on "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "data.aws_availability_zones.all"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "data.aws_availability_zones.all" waiting on "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "root" waiting on "output.elb_dns_name"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_autoscaling_group.example"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_security_group.elb" waiting on "provider.aws"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "aws_security_group.instance"
2019/01/15 16:59:43 [TRACE] dag/walk: added edge: "output.elb_dns_name" waiting on "aws_elb.example"
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_launch_configuration.example", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_autoscaling_group.example", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "output.elb_dns_name", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_elb.example", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_security_group.instance", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "data.aws_availability_zones.all", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: dependencies changed for "aws_security_group.elb", sending new deps
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.public_key_path"
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.key_name"
2019/01/15 16:59:43 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.secretAccessKey"
2019/01/15 16:59:43 [TRACE] vertex "var.key_name": visit complete
2019/01/15 16:59:43 [TRACE] vertex "var.secretAccessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.secretAccessKey": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.region"
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.accessKey"
2019/01/15 16:59:43 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.amis"
2019/01/15 16:59:43 [TRACE] vertex "var.amis": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.amis": visit complete
2019/01/15 16:59:43 [TRACE] vertex "var.accessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.accessKey": visit complete
2019/01/15 16:59:43 [TRACE] vertex "var.region": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "var.contador"
2019/01/15 16:59:43 [TRACE] vertex "var.contador": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.contador": visit complete
2019/01/15 16:59:43 [TRACE] dag/walk: visiting "provider.aws"
2019/01/15 16:59:43 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2019/01/15 16:59:43 [TRACE] vertex "provider.aws": evaluating
2019/01/15 16:59:43 [TRACE] [walkRefresh] Entering eval tree: provider.aws
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalInitProvider
2019/01/15 16:59:43 [TRACE] vertex "var.public_key_path": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:43 [TRACE] vertex "var.public_key_path": visit complete
2019-01-15T16:59:43.579-0500 [DEBUG] plugin: starting plugin: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe args=[C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe]
2019-01-15T16:59:43.604-0500 [DEBUG] plugin: plugin started: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=1660
2019-01-15T16:59:43.604-0500 [DEBUG] plugin: waiting for RPC address: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe
2019-01-15T16:59:43.646-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2019-01-15T16:59:43.645-0500
2019-01-15T16:59:43.646-0500 [DEBUG] plugin: using plugin: version=5
2019/01/15 16:59:43 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2019/01/15 16:59:43 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:43 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:43 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2019/01/15 16:59:43 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2019/01/15 16:59:43 [TRACE] GRPCProvider: GetSchema
2019/01/15 16:59:43 [TRACE] GRPCProvider: Configure
2019-01-15T16:59:43.694-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [INFO] No assume_role block read from configuration
2019-01-15T16:59:43.694-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [INFO] Building AWS region structure
2019-01-15T16:59:43.694-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [INFO] Building AWS auth structure
2019-01-15T16:59:43.694-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [INFO] Setting AWS metadata API timeout to 100ms
2019-01-15T16:59:43.952-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2019-01-15T16:59:43.952-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [INFO] AWS Auth provider used: "StaticProvider"
2019-01-15T16:59:43.953-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [INFO] Initializing DeviceFarm SDK connection
2019-01-15T16:59:43.953-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:43 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: provider.aws
2019/01/15 16:59:45 [TRACE] vertex "provider.aws": visit complete
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_security_group.instance"
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": starting visit (*terraform.NodeRefreshableManagedResource)
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": expanding dynamic subgraph
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_security_group.instance - *terraform.NodeRefreshableManagedResourceInstance
------
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_security_group.elb"
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": starting visit (*terraform.NodeRefreshableManagedResource)
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": expanding dynamic subgraph
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "data.aws_availability_zones.all"
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": starting visit (*terraform.NodeRefreshableDataResource)
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": expanding dynamic subgraph
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:45 [DEBUG] ReferenceTransformer: "aws_security_group.instance" references: []
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": entering dynamic subgraph
2019/01/15 16:59:45 [TRACE] dag/walk: updating graph
2019/01/15 16:59:45 [TRACE] dag/walk: added new vertex: "aws_security_group.instance"
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_security_group.instance"
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.instance will be refreshed
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": evaluating
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.instance
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_security_group.elb - *terraform.NodeRefreshableManagedResourceInstance
------
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:45 [DEBUG] Resource state not found for node "aws_security_group.elb", instance aws_security_group.elb
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:45 [TRACE] EvalReadState: reading state for aws_security_group.instance
2019/01/15 16:59:45 [DEBUG] ReferenceTransformer: "aws_security_group.elb" references: []
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": entering dynamic subgraph
2019/01/15 16:59:45 [TRACE] dag/walk: updating graph
2019/01/15 16:59:45 [TRACE] dag/walk: added new vertex: "aws_security_group.elb"
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_security_group.elb"
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2019/01/15 16:59:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_security_group.elb has no existing state to refresh
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": evaluating
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: aws_security_group.elb
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:45 [TRACE] EvalReadState: reading state for aws_security_group.elb
2019/01/15 16:59:45 [TRACE] EvalReadState: no state present for aws_security_group.elb
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
data.aws_availability_zones.all - *terraform.NodeRefreshableDataResourceInstance
------
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:45 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.all" references: []
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": entering dynamic subgraph
2019/01/15 16:59:45 [TRACE] dag/walk: updating graph
2019/01/15 16:59:45 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.all"
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "data.aws_availability_zones.all"
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": starting visit (*terraform.NodeRefreshableDataResourceInstance)
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": evaluating
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: data.aws_availability_zones.all
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:45 [TRACE] EvalWriteState: removing state object for data.aws_availability_zones.all
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 16:59:45 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalReadData
2019/01/15 16:59:45 [TRACE] EvalReadData: working on data.aws_availability_zones.all
2019/01/15 16:59:45 [TRACE] EvalReadData: data.aws_availability_zones.all configuration is complete, so reading from provider
2019/01/15 16:59:45 [TRACE] GRPCProvider: ReadDataSource
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalRefresh
2019/01/15 16:59:45 [TRACE] GRPCProvider: ReadResource
2019/01/15 16:59:45 [TRACE] GRPCProvider: PlanResourceChange
2019-01-15T16:59:45.102-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:45 [DEBUG] Reading Availability Zones.
2019-01-15T16:59:45.102-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:45 [DEBUG] Reading Availability Zones: {
2019-01-15T16:59:45.102-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 
2019-01-15T16:59:45.102-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: }
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:45 [TRACE] EvalWriteState: writing current state object for aws_security_group.elb
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:45 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.elb
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.elb
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": visit complete
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": dynamic subgraph completed successfully
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.elb": visit complete
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:45 [TRACE] EvalWriteState: writing current state object for aws_security_group.instance
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: aws_security_group.instance
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": visit complete
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": dynamic subgraph completed successfully
2019/01/15 16:59:45 [TRACE] vertex "aws_security_group.instance": visit complete
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_launch_configuration.example"
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": starting visit (*terraform.NodeRefreshableManagedResource)
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": expanding dynamic subgraph
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_launch_configuration.example - *terraform.NodeRefreshableManagedResourceInstance
------
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:45 [DEBUG] Resource state not found for node "aws_launch_configuration.example", instance aws_launch_configuration.example
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:45 [DEBUG] ReferenceTransformer: "aws_launch_configuration.example" references: []
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": entering dynamic subgraph
2019/01/15 16:59:45 [TRACE] dag/walk: updating graph
2019/01/15 16:59:45 [TRACE] dag/walk: added new vertex: "aws_launch_configuration.example"
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_launch_configuration.example"
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2019/01/15 16:59:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_launch_configuration.example has no existing state to refresh
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": evaluating
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: aws_launch_configuration.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:45 [TRACE] EvalReadState: reading state for aws_launch_configuration.example
2019/01/15 16:59:45 [TRACE] EvalReadState: no state present for aws_launch_configuration.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:45 [TRACE] GetResourceInstance: aws_security_group.instance is a single instance
2019/01/15 16:59:45 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:45 [TRACE] EvalWriteState: writing current state object for aws_launch_configuration.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:45 [TRACE] EvalWriteDiff: recorded Create change for aws_launch_configuration.example
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: aws_launch_configuration.example
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": visit complete
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": dynamic subgraph completed successfully
2019/01/15 16:59:45 [TRACE] vertex "aws_launch_configuration.example": visit complete
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:45 [TRACE] EvalWriteState: writing current state object for data.aws_availability_zones.all
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: data.aws_availability_zones.all
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": visit complete
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": dynamic subgraph completed successfully
2019/01/15 16:59:45 [TRACE] vertex "data.aws_availability_zones.all": visit complete
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_elb.example"
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": starting visit (*terraform.NodeRefreshableManagedResource)
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": expanding dynamic subgraph
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_elb.example - *terraform.NodeRefreshableManagedResourceInstance
------
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:45 [DEBUG] Resource instance state not found for node "aws_elb.example", instance aws_elb.example
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:45 [DEBUG] ReferenceTransformer: "aws_elb.example" references: []
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": entering dynamic subgraph
2019/01/15 16:59:45 [TRACE] dag/walk: updating graph
2019/01/15 16:59:45 [TRACE] dag/walk: added new vertex: "aws_elb.example"
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_elb.example"
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2019/01/15 16:59:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_elb.example has no existing state to refresh
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": evaluating
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: aws_elb.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:45 [TRACE] EvalReadState: reading state for aws_elb.example
2019/01/15 16:59:45 [TRACE] EvalReadState: no state present for aws_elb.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:45 [TRACE] GetResourceInstance: data.aws_availability_zones.all is a single instance
2019/01/15 16:59:45 [TRACE] GetResourceInstance: aws_security_group.elb is a single instance
2019/01/15 16:59:45 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:45 [TRACE] EvalWriteState: writing current state object for aws_elb.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:45 [TRACE] EvalWriteDiff: recorded Create change for aws_elb.example
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: aws_elb.example
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": visit complete
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": dynamic subgraph completed successfully
2019/01/15 16:59:45 [TRACE] vertex "aws_elb.example": visit complete
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "output.elb_dns_name"
2019/01/15 16:59:45 [TRACE] vertex "output.elb_dns_name": starting visit (*terraform.NodeApplyableOutput)
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_autoscaling_group.example"
2019/01/15 16:59:45 [TRACE] vertex "output.elb_dns_name": evaluating
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": starting visit (*terraform.NodeRefreshableManagedResource)
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: output.elb_dns_name
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": expanding dynamic subgraph
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeRefreshableManagedResourceInstance
------
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2019/01/15 16:59:45 [DEBUG] Resource instance state not found for node "aws_autoscaling_group.example", instance aws_autoscaling_group.example
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:45 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.example" references: []
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:45 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:45 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": entering dynamic subgraph
2019/01/15 16:59:45 [TRACE] dag/walk: updating graph
2019/01/15 16:59:45 [TRACE] dag/walk: added new vertex: "aws_autoscaling_group.example"
2019/01/15 16:59:45 [TRACE] GetResourceInstance: aws_elb.example is a single instance
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "aws_autoscaling_group.example"
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2019/01/15 16:59:45 [TRACE] NodeRefreshableManagedResourceInstance: aws_autoscaling_group.example has no existing state to refresh
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": evaluating
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: aws_autoscaling_group.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:45 [TRACE] EvalReadState: reading state for aws_autoscaling_group.example
2019/01/15 16:59:45 [TRACE] EvalReadState: no state present for aws_autoscaling_group.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: output.elb_dns_name
2019/01/15 16:59:45 [TRACE] vertex "output.elb_dns_name": visit complete
2019/01/15 16:59:45 [TRACE] GetResourceInstance: aws_elb.example is a single instance
2019/01/15 16:59:45 [TRACE] GetResourceInstance: data.aws_availability_zones.all is a single instance
2019/01/15 16:59:45 [TRACE] GetResourceInstance: aws_launch_configuration.example is a single instance
2019/01/15 16:59:45 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:45 [TRACE] EvalWriteState: writing current state object for aws_autoscaling_group.example
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:45 [TRACE] EvalWriteDiff: recorded Create change for aws_autoscaling_group.example
2019/01/15 16:59:45 [TRACE] [walkRefresh] Exiting eval tree: aws_autoscaling_group.example
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": visit complete
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": dynamic subgraph completed successfully
2019/01/15 16:59:45 [TRACE] vertex "aws_autoscaling_group.example": visit complete
2019/01/15 16:59:45 [TRACE] dag/walk: visiting "provider.aws (close)"
2019/01/15 16:59:45 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2019/01/15 16:59:45 [TRACE] vertex "provider.aws (close)": evaluating
2019/01/15 16:59:45 [TRACE] [walkRefresh] Entering eval tree: provider.aws (close)
2019/01/15 16:59:45 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2019/01/15 16:59:45 [TRACE] GRPCProvider: PlanResourceChange
2019-01-15T16:59:46.006-0500 [WARN]  plugin: plugin failed to exit gracefully
2019-01-15T16:59:46.020-0500 [DEBUG] plugin: plugin process exited: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=1660 error="exit status 1"
2019/01/15 16:59:46 [TRACE] [walkRefresh] Exiting eval tree: provider.aws (close)
2019/01/15 16:59:46 [TRACE] vertex "provider.aws (close)": visit complete
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "root"
2019/01/15 16:59:46 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2019/01/15 16:59:46 [TRACE] vertex "root": visit complete
2019/01/15 16:59:46 [INFO] backend/local: apply calling Plan
2019/01/15 16:59:46 [INFO] terraform: building graph: GraphTypePlan
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.ConfigTransformer
2019/01/15 16:59:46 [TRACE] ConfigTransformer: Starting for path: 
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
aws_elb.example - *terraform.NodePlannableResource
aws_launch_configuration.example - *terraform.NodePlannableResource
aws_security_group.elb - *terraform.NodePlannableResource
aws_security_group.instance - *terraform.NodePlannableResource
data.aws_availability_zones.all - *terraform.NodePlannableResource
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.LocalTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.OutputTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
aws_elb.example - *terraform.NodePlannableResource
aws_launch_configuration.example - *terraform.NodePlannableResource
aws_security_group.elb - *terraform.NodePlannableResource
aws_security_group.instance - *terraform.NodePlannableResource
data.aws_availability_zones.all - *terraform.NodePlannableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.StateTransformer
2019/01/15 16:59:46 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2019/01/15 16:59:46 [TRACE] AttachResourceConfigTransformer: attaching to "aws_elb.example" (*terraform.NodePlannableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:71,1-29
2019/01/15 16:59:46 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.all" (*terraform.NodePlannableResource) config from hcl.Range{Filename:"E:\\Personal Progamming\\Diplomado UDEA\\Curso II Devops\\TallerFinal\\example.tf", Start:hcl.Pos{Line:7, Column:1, Byte:127}, End:hcl.Pos{Line:7, Column:36, Byte:162}}
2019/01/15 16:59:46 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.instance" (*terraform.NodePlannableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:10,1-41
2019/01/15 16:59:46 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_configuration.example" (*terraform.NodePlannableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:26,1-46
2019/01/15 16:59:46 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.example" (*terraform.NodePlannableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:41,1-43
2019/01/15 16:59:46 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.elb" (*terraform.NodePlannableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:55,1-36
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
aws_elb.example - *terraform.NodePlannableResource
aws_launch_configuration.example - *terraform.NodePlannableResource
aws_security_group.elb - *terraform.NodePlannableResource
aws_security_group.instance - *terraform.NodePlannableResource
data.aws_availability_zones.all - *terraform.NodePlannableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2019/01/15 16:59:46 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:1,1-15
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
aws_elb.example - *terraform.NodePlannableResource
aws_launch_configuration.example - *terraform.NodePlannableResource
aws_security_group.elb - *terraform.NodePlannableResource
aws_security_group.instance - *terraform.NodePlannableResource
data.aws_availability_zones.all - *terraform.NodePlannableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2019/01/15 16:59:46 [TRACE] ProviderTransformer: aws_autoscaling_group.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:46 [TRACE] ProviderTransformer: aws_security_group.elb is provided by provider.aws or inherited equivalent
2019/01/15 16:59:46 [TRACE] ProviderTransformer: aws_elb.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:46 [TRACE] ProviderTransformer: aws_security_group.instance is provided by provider.aws or inherited equivalent
2019/01/15 16:59:46 [TRACE] ProviderTransformer: aws_launch_configuration.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:46 [TRACE] ProviderTransformer: data.aws_availability_zones.all is provided by provider.aws or inherited equivalent
2019/01/15 16:59:46 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_availability_zones.all
2019/01/15 16:59:46 [DEBUG] ProviderTransformer: "data.aws_availability_zones.all" (*terraform.NodePlannableResource) needs provider.aws
2019/01/15 16:59:46 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_autoscaling_group.example
2019/01/15 16:59:46 [DEBUG] ProviderTransformer: "aws_autoscaling_group.example" (*terraform.NodePlannableResource) needs provider.aws
2019/01/15 16:59:46 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.elb
2019/01/15 16:59:46 [DEBUG] ProviderTransformer: "aws_security_group.elb" (*terraform.NodePlannableResource) needs provider.aws
2019/01/15 16:59:46 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_elb.example
2019/01/15 16:59:46 [DEBUG] ProviderTransformer: "aws_elb.example" (*terraform.NodePlannableResource) needs provider.aws
2019/01/15 16:59:46 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.instance
2019/01/15 16:59:46 [DEBUG] ProviderTransformer: "aws_security_group.instance" (*terraform.NodePlannableResource) needs provider.aws
2019/01/15 16:59:46 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_launch_configuration.example
2019/01/15 16:59:46 [DEBUG] ProviderTransformer: "aws_launch_configuration.example" (*terraform.NodePlannableResource) needs provider.aws
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2019/01/15 16:59:46 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2019/01/15 16:59:46 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.elb
2019/01/15 16:59:46 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_elb.example
2019/01/15 16:59:46 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.instance
2019/01/15 16:59:46 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2019/01/15 16:59:46 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_configuration.example
2019/01/15 16:59:46 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.all
2019/01/15 16:59:46 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.example
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "var.accessKey" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "aws_security_group.elb" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "aws_elb.example" references: [data.aws_availability_zones.all aws_security_group.elb]
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "var.region" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "aws_security_group.instance" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "var.contador" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "output.elb_dns_name" references: [aws_elb.example]
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "var.public_key_path" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "var.amis" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "var.secretAccessKey" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.accessKey var.secretAccessKey]
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "aws_launch_configuration.example" references: [aws_security_group.instance var.key_name var.amis var.region]
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.all" references: []
2019/01/15 16:59:46 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.example" references: [aws_launch_configuration.example data.aws_availability_zones.all aws_elb.example]
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2019/01/15 16:59:46 [TRACE] ForcedCBDTransformer: "aws_elb.example" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2019/01/15 16:59:46 [TRACE] ForcedCBDTransformer: "aws_security_group.elb" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2019/01/15 16:59:46 [TRACE] ForcedCBDTransformer: "aws_security_group.instance" has CBD descendent "aws_launch_configuration.example"
2019/01/15 16:59:46 [TRACE] ForcedCBDTransformer: forcing create_before_destroy on for "aws_security_group.instance" (*terraform.NodePlannableResource)
2019/01/15 16:59:46 [TRACE] ForcedCBDTransformer: "data.aws_availability_zones.all" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2019/01/15 16:59:46 [TRACE] ForcedCBDTransformer: "aws_launch_configuration.example" (*terraform.NodePlannableResource) already has create_before_destroy set
2019/01/15 16:59:46 [TRACE] ForcedCBDTransformer: "aws_autoscaling_group.example" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2019/01/15 16:59:46 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResource
  aws_elb.example - *terraform.NodePlannableResource
  aws_launch_configuration.example - *terraform.NodePlannableResource
aws_elb.example - *terraform.NodePlannableResource
  aws_security_group.elb - *terraform.NodePlannableResource
  data.aws_availability_zones.all - *terraform.NodePlannableResource
aws_launch_configuration.example - *terraform.NodePlannableResource
  aws_security_group.instance - *terraform.NodePlannableResource
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_security_group.elb - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all - *terraform.NodePlannableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodePlannableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  var.contador - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodePlannableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:46 [DEBUG] Starting graph walk: walkPlan
2019/01/15 16:59:46 [TRACE] dag/walk: updating graph
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "root"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "aws_launch_configuration.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.all"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "output.elb_dns_name"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "aws_autoscaling_group.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "aws_security_group.elb"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "var.accessKey"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "var.region"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "var.amis"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "var.secretAccessKey"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "var.contador"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "var.key_name"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "provider.aws"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "aws_elb.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "aws_security_group.instance"
2019/01/15 16:59:46 [TRACE] dag/walk: added new vertex: "var.public_key_path"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_security_group.instance" waiting on "provider.aws"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.elb_dns_name"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.secretAccessKey"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.region"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_elb.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.key_name"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "data.aws_availability_zones.all" waiting on "provider.aws"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.accessKey"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "aws_security_group.instance"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.amis"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "aws_security_group.elb"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.contador"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_security_group.elb" waiting on "provider.aws"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "output.elb_dns_name" waiting on "aws_elb.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_launch_configuration.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.public_key_path"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_autoscaling_group.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_autoscaling_group.example"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:46 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "data.aws_availability_zones.all"
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "aws_elb.example", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "aws_autoscaling_group.example", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "aws_launch_configuration.example", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "data.aws_availability_zones.all", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "aws_security_group.elb", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "output.elb_dns_name", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: dependencies changed for "aws_security_group.instance", sending new deps
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "var.public_key_path"
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "var.secretAccessKey"
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "var.amis"
2019/01/15 16:59:46 [TRACE] vertex "var.amis": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "var.contador"
2019/01/15 16:59:46 [TRACE] vertex "var.contador": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:46 [TRACE] vertex "var.amis": visit complete
2019/01/15 16:59:46 [TRACE] vertex "var.contador": visit complete
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "var.region"
2019/01/15 16:59:46 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:46 [TRACE] vertex "var.public_key_path": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:46 [TRACE] vertex "var.public_key_path": visit complete
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "var.accessKey"
2019/01/15 16:59:46 [TRACE] vertex "var.accessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:46 [TRACE] vertex "var.secretAccessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:46 [TRACE] vertex "var.secretAccessKey": visit complete
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "var.key_name"
2019/01/15 16:59:46 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:46 [TRACE] vertex "var.region": visit complete
2019/01/15 16:59:46 [TRACE] vertex "var.accessKey": visit complete
2019/01/15 16:59:46 [TRACE] dag/walk: visiting "provider.aws"
2019/01/15 16:59:46 [TRACE] vertex "var.key_name": visit complete
2019/01/15 16:59:46 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2019/01/15 16:59:46 [TRACE] vertex "provider.aws": evaluating
2019/01/15 16:59:46 [TRACE] [walkPlan] Entering eval tree: provider.aws
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalInitProvider
2019-01-15T16:59:46.024-0500 [DEBUG] plugin: starting plugin: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe args=[C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe]
2019-01-15T16:59:46.038-0500 [DEBUG] plugin: plugin started: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=10900
2019-01-15T16:59:46.038-0500 [DEBUG] plugin: waiting for RPC address: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe
2019-01-15T16:59:46.086-0500 [DEBUG] plugin: using plugin: version=5
2019-01-15T16:59:46.086-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2019-01-15T16:59:46.085-0500
2019/01/15 16:59:46 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2019/01/15 16:59:46 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:46 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:46 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2019/01/15 16:59:46 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2019/01/15 16:59:46 [TRACE] GRPCProvider: GetSchema
2019/01/15 16:59:46 [TRACE] GRPCProvider: Configure
2019-01-15T16:59:46.160-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [INFO] No assume_role block read from configuration
2019-01-15T16:59:46.160-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [INFO] Building AWS region structure
2019-01-15T16:59:46.160-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [INFO] Building AWS auth structure
2019-01-15T16:59:46.160-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [INFO] Setting AWS metadata API timeout to 100ms
2019-01-15T16:59:46.443-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2019-01-15T16:59:46.443-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [INFO] AWS Auth provider used: "StaticProvider"
2019-01-15T16:59:46.443-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [INFO] Initializing DeviceFarm SDK connection
2019-01-15T16:59:46.444-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:46 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: provider.aws
2019/01/15 16:59:47 [TRACE] vertex "provider.aws": visit complete
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "data.aws_availability_zones.all"
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_security_group.instance"
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_security_group.elb"
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": starting visit (*terraform.NodePlannableResource)
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": starting visit (*terraform.NodePlannableResource)
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_security_group.elb
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_security_group.instance
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": starting visit (*terraform.NodePlannableResource)
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.elb
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": evaluating
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": expanding dynamic subgraph
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: data.aws_availability_zones.all
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.instance
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": expanding dynamic subgraph
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_security_group.elb - *terraform.NodePlannableResourceInstance
------
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:47 [DEBUG] Resource instance state not found for node "aws_security_group.elb", instance aws_security_group.elb
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:47 [DEBUG] ReferenceTransformer: "aws_security_group.elb" references: []
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": entering dynamic subgraph
2019/01/15 16:59:47 [TRACE] dag/walk: updating graph
2019/01/15 16:59:47 [TRACE] dag/walk: added new vertex: "aws_security_group.elb"
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_security_group.elb"
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": starting visit (*terraform.NodePlannableResourceInstance)
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: data.aws_availability_zones.all
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": expanding dynamic subgraph
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
data.aws_availability_zones.all - *terraform.NodePlannableResourceInstance
------
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:47 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.all" references: []
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": evaluating
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_security_group.elb
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": entering dynamic subgraph
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:47 [TRACE] dag/walk: updating graph
2019/01/15 16:59:47 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.all"
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "data.aws_availability_zones.all"
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": starting visit (*terraform.NodePlannableResourceInstance)
2019/01/15 16:59:47 [TRACE] EvalReadState: reading state for aws_security_group.elb
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_security_group.instance - *terraform.NodePlannableResourceInstance
------
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": evaluating
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: data.aws_availability_zones.all
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:47 [TRACE] EvalReadState: reading state for data.aws_availability_zones.all
2019/01/15 16:59:47 [DEBUG] ReferenceTransformer: "aws_security_group.instance" references: []
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": entering dynamic subgraph
2019/01/15 16:59:47 [TRACE] dag/walk: updating graph
2019/01/15 16:59:47 [TRACE] dag/walk: added new vertex: "aws_security_group.instance"
2019/01/15 16:59:47 [TRACE] EvalReadState: no state present for aws_security_group.elb
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_security_group.instance"
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": starting visit (*terraform.NodePlannableResourceInstance)
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalIf, early exit err: early exit
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence, early exit err: early exit
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: data.aws_availability_zones.all
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": visit complete
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": dynamic subgraph completed successfully
2019/01/15 16:59:47 [TRACE] vertex "data.aws_availability_zones.all": visit complete
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_security_group.instance
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:47 [TRACE] EvalReadState: reading state for aws_security_group.instance
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:47 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:47 [TRACE] GRPCProvider: PlanResourceChange
2019-01-15T16:59:47.685-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 16:59:47 [DEBUG] Instance Diff is nil in SimpleDiff()
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:47 [TRACE] EvalWriteState: writing current state object for aws_security_group.instance
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:47 [TRACE] EvalWriteDiff: recorded Update change for aws_security_group.instance
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.instance
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": visit complete
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": dynamic subgraph completed successfully
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.instance": visit complete
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_launch_configuration.example"
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": starting visit (*terraform.NodePlannableResource)
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": expanding dynamic subgraph
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_launch_configuration.example - *terraform.NodePlannableResourceInstance
------
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:47 [DEBUG] Resource instance state not found for node "aws_launch_configuration.example", instance aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:47 [DEBUG] ReferenceTransformer: "aws_launch_configuration.example" references: []
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": entering dynamic subgraph
2019/01/15 16:59:47 [TRACE] dag/walk: updating graph
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:47 [TRACE] EvalWriteState: writing current state object for aws_security_group.elb
2019/01/15 16:59:47 [TRACE] dag/walk: added new vertex: "aws_launch_configuration.example"
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_launch_configuration.example"
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": starting visit (*terraform.NodePlannableResourceInstance)
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:47 [TRACE] EvalReadState: reading state for aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] EvalReadState: no state present for aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:47 [TRACE] EvalWriteDiff: recorded Create change for aws_security_group.elb
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_security_group.elb
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": visit complete
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": dynamic subgraph completed successfully
2019/01/15 16:59:47 [TRACE] vertex "aws_security_group.elb": visit complete
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_elb.example"
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": starting visit (*terraform.NodePlannableResource)
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_elb.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_elb.example
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": expanding dynamic subgraph
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_elb.example - *terraform.NodePlannableResourceInstance
------
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:47 [DEBUG] Resource instance state not found for node "aws_elb.example", instance aws_elb.example
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:47 [DEBUG] ReferenceTransformer: "aws_elb.example" references: []
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": entering dynamic subgraph
2019/01/15 16:59:47 [TRACE] dag/walk: updating graph
2019/01/15 16:59:47 [TRACE] dag/walk: added new vertex: "aws_elb.example"
2019/01/15 16:59:47 [TRACE] GetResourceInstance: aws_security_group.instance is a single instance
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_elb.example"
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": starting visit (*terraform.NodePlannableResourceInstance)
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_elb.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:47 [TRACE] EvalReadState: reading state for aws_elb.example
2019/01/15 16:59:47 [TRACE] EvalReadState: no state present for aws_elb.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:47 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:47 [TRACE] GetResourceInstance: aws_security_group.elb is a single instance
2019/01/15 16:59:47 [TRACE] GetResourceInstance: data.aws_availability_zones.all is a single instance
2019/01/15 16:59:47 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:47 [TRACE] EvalWriteState: writing current state object for aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:47 [TRACE] EvalWriteDiff: recorded Create change for aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_launch_configuration.example
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": visit complete
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": dynamic subgraph completed successfully
2019/01/15 16:59:47 [TRACE] vertex "aws_launch_configuration.example": visit complete
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:47 [TRACE] EvalWriteState: writing current state object for aws_elb.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:47 [TRACE] EvalWriteDiff: recorded Create change for aws_elb.example
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_elb.example
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": visit complete
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": dynamic subgraph completed successfully
2019/01/15 16:59:47 [TRACE] vertex "aws_elb.example": visit complete
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_autoscaling_group.example"
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": starting visit (*terraform.NodePlannableResource)
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "output.elb_dns_name"
2019/01/15 16:59:47 [TRACE] vertex "output.elb_dns_name": starting visit (*terraform.NodeApplyableOutput)
2019/01/15 16:59:47 [TRACE] vertex "output.elb_dns_name": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: output.elb_dns_name
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteOutput
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": expanding dynamic subgraph
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodePlannableResourceInstance
------
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:47 [DEBUG] Resource instance state not found for node "aws_autoscaling_group.example", instance aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:47 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.example" references: []
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2019/01/15 16:59:47 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:47 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": entering dynamic subgraph
2019/01/15 16:59:47 [TRACE] dag/walk: updating graph
2019/01/15 16:59:47 [TRACE] dag/walk: added new vertex: "aws_autoscaling_group.example"
2019/01/15 16:59:47 [TRACE] GetResourceInstance: aws_elb.example is a single instance
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "aws_autoscaling_group.example"
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": starting visit (*terraform.NodePlannableResourceInstance)
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: output.elb_dns_name
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 16:59:47 [TRACE] vertex "output.elb_dns_name": visit complete
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 16:59:47 [TRACE] EvalReadState: reading state for aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] EvalReadState: no state present for aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 16:59:47 [TRACE] GetResourceInstance: data.aws_availability_zones.all is a single instance
2019/01/15 16:59:47 [TRACE] GetResourceInstance: aws_launch_configuration.example is a single instance
2019/01/15 16:59:47 [TRACE] GetResourceInstance: aws_elb.example is a single instance
2019/01/15 16:59:47 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 16:59:47 [TRACE] EvalWriteState: writing current state object for aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 16:59:47 [TRACE] EvalWriteDiff: recorded Create change for aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: aws_autoscaling_group.example
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": visit complete
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": dynamic subgraph completed successfully
2019/01/15 16:59:47 [TRACE] vertex "aws_autoscaling_group.example": visit complete
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "provider.aws (close)"
2019/01/15 16:59:47 [TRACE] vertex "provider.aws (close)": starting visit (*terraform.graphNodeCloseProvider)
2019/01/15 16:59:47 [TRACE] vertex "provider.aws (close)": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: provider.aws (close)
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2019/01/15 16:59:47 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 16:59:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2019/01/15 16:59:47 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2019/01/15 16:59:47 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2019/01/15 16:59:47 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2019-01-15T16:59:47.947-0500 [WARN]  plugin: plugin failed to exit gracefully
2019-01-15T16:59:47.958-0500 [DEBUG] plugin: plugin process exited: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=10900 error="exit status 1"
2019/01/15 16:59:47 [TRACE] [walkPlan] Exiting eval tree: provider.aws (close)
2019/01/15 16:59:47 [TRACE] vertex "provider.aws (close)": visit complete
2019/01/15 16:59:47 [TRACE] dag/walk: visiting "root"
2019/01/15 16:59:47 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2019/01/15 16:59:47 [TRACE] vertex "root": visit complete
2019/01/15 16:59:48 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2019/01/15 16:59:59 [INFO] backend/local: apply calling Apply
2019/01/15 16:59:59 [INFO] terraform: building graph: GraphTypeApply
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.ConfigTransformer
2019/01/15 16:59:59 [TRACE] ConfigTransformer: Starting for path: 
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.DiffTransformer
2019/01/15 16:59:59 [TRACE] DiffTransformer starting
2019/01/15 16:59:59 [TRACE] DiffTransformer: found Create change for aws_autoscaling_group.example 
2019/01/15 16:59:59 [TRACE] DiffTransformer: aws_autoscaling_group.example will be represented by aws_autoscaling_group.example
2019/01/15 16:59:59 [TRACE] DiffTransformer: found Create change for aws_elb.example 
2019/01/15 16:59:59 [TRACE] DiffTransformer: aws_elb.example will be represented by aws_elb.example
2019/01/15 16:59:59 [TRACE] DiffTransformer: found Create change for aws_launch_configuration.example 
2019/01/15 16:59:59 [TRACE] DiffTransformer: aws_launch_configuration.example will be represented by aws_launch_configuration.example
2019/01/15 16:59:59 [TRACE] DiffTransformer: found Create change for aws_security_group.elb 
2019/01/15 16:59:59 [TRACE] DiffTransformer: aws_security_group.elb will be represented by aws_security_group.elb
2019/01/15 16:59:59 [TRACE] DiffTransformer: found Update change for aws_security_group.instance 
2019/01/15 16:59:59 [TRACE] DiffTransformer: aws_security_group.instance will be represented by aws_security_group.instance
2019/01/15 16:59:59 [TRACE] DiffTransformer complete
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.elb (prepare state)" (*terraform.NodeApplyableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:55,1-36
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "data.aws_availability_zones.all (prepare state)" (*terraform.NodeApplyableResource) config from hcl.Range{Filename:"E:\\Personal Progamming\\Diplomado UDEA\\Curso II Devops\\TallerFinal\\example.tf", Start:hcl.Pos{Line:7, Column:1, Byte:127}, End:hcl.Pos{Line:7, Column:36, Byte:162}}
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.example" (*terraform.NodeApplyableResourceInstance) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:41,1-43
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_configuration.example" (*terraform.NodeApplyableResourceInstance) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:26,1-46
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.instance" (*terraform.NodeApplyableResourceInstance) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:10,1-41
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.instance (prepare state)" (*terraform.NodeApplyableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:10,1-41
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_launch_configuration.example (prepare state)" (*terraform.NodeApplyableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:26,1-46
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_elb.example" (*terraform.NodeApplyableResourceInstance) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:71,1-29
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_security_group.elb" (*terraform.NodeApplyableResourceInstance) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:55,1-36
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_autoscaling_group.example (prepare state)" (*terraform.NodeApplyableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:41,1-43
2019/01/15 16:59:59 [TRACE] AttachResourceConfigTransformer: attaching to "aws_elb.example (prepare state)" (*terraform.NodeApplyableResource) config from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:71,1-29
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2019/01/15 16:59:59 [DEBUG] Resource state not found for node "aws_autoscaling_group.example", instance aws_autoscaling_group.example
2019/01/15 16:59:59 [DEBUG] Resource state not found for node "aws_launch_configuration.example", instance aws_launch_configuration.example
2019/01/15 16:59:59 [DEBUG] Resource state not found for node "aws_elb.example", instance aws_elb.example
2019/01/15 16:59:59 [DEBUG] Resource state not found for node "aws_security_group.elb", instance aws_security_group.elb
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.RootVariableTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.LocalTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.OutputTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.OutputTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2019/01/15 16:59:59 [TRACE] ProviderConfigTransformer: attaching to "provider.aws" provider configuration from E:\Personal Progamming\Diplomado UDEA\Curso II Devops\TallerFinal\example.tf:1,1-15
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_elb.example (prepare state) is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: data.aws_availability_zones.all (prepare state) is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_launch_configuration.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_security_group.instance is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_autoscaling_group.example (prepare state) is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_elb.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_security_group.elb is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_security_group.instance (prepare state) is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_launch_configuration.example (prepare state) is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_security_group.elb (prepare state) is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: aws_autoscaling_group.example is provided by provider.aws or inherited equivalent
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.instance
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_security_group.instance" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_elb.example
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_elb.example" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_launch_configuration.example (prepare state)
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_launch_configuration.example (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_autoscaling_group.example
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_autoscaling_group.example" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_launch_configuration.example
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_launch_configuration.example" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving data.aws_availability_zones.all (prepare state)
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "data.aws_availability_zones.all (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_autoscaling_group.example (prepare state)
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_autoscaling_group.example (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.elb
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_security_group.elb" (*terraform.NodeApplyableResourceInstance) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.instance (prepare state)
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_security_group.instance (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_security_group.elb (prepare state)
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_security_group.elb (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2019/01/15 16:59:59 [TRACE] ProviderTransformer: exact match for provider.aws serving aws_elb.example (prepare state)
2019/01/15 16:59:59 [DEBUG] ProviderTransformer: "aws_elb.example (prepare state)" (*terraform.NodeApplyableResource) needs provider.aws
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2019/01/15 16:59:59 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_elb.example (prepare state)
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to data.aws_availability_zones.all (prepare state)
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_configuration.example
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.instance
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aws
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.example (prepare state)
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_elb.example
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.elb
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.instance (prepare state)
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_launch_configuration.example (prepare state)
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_security_group.elb (prepare state)
2019/01/15 16:59:59 [TRACE] AttachSchemaTransformer: attaching resource schema to aws_autoscaling_group.example
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_launch_configuration.example (prepare state)" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_security_group.elb (prepare state)" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.example" references: [data.aws_availability_zones.all (prepare state) aws_launch_configuration.example (prepare state) aws_launch_configuration.example aws_launch_configuration.example aws_elb.example (prepare state) aws_elb.example aws_elb.example]
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "var.contador" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "var.accessKey" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_security_group.instance (prepare state)" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "var.public_key_path" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_elb.example (prepare state)" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_launch_configuration.example" references: [var.amis var.region var.key_name aws_security_group.instance (prepare state) aws_security_group.instance aws_security_group.instance]
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_security_group.instance" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "var.secretAccessKey" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "var.amis" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "data.aws_availability_zones.all (prepare state)" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_elb.example" references: [data.aws_availability_zones.all (prepare state) aws_security_group.elb (prepare state) aws_security_group.elb aws_security_group.elb]
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_security_group.elb" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "var.region" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "var.key_name" references: []
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "output.elb_dns_name" references: [aws_elb.example (prepare state) aws_elb.example aws_elb.example]
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "provider.aws" references: [var.accessKey var.secretAccessKey]
2019/01/15 16:59:59 [DEBUG] ReferenceTransformer: "aws_autoscaling_group.example (prepare state)" references: []
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.TargetsTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.RootTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  output.elb_dns_name - *terraform.NodeApplyableOutput
  provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.amis - *terraform.NodeRootVariable
  var.contador - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2019/01/15 16:59:59 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
aws_autoscaling_group.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_elb.example - *terraform.NodeApplyableResourceInstance
  aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
aws_elb.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_launch_configuration.example - *terraform.NodeApplyableResourceInstance
  aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  var.amis - *terraform.NodeRootVariable
  var.key_name - *terraform.NodeRootVariable
  var.region - *terraform.NodeRootVariable
aws_launch_configuration.example (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.elb - *terraform.NodeApplyableResourceInstance
  aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
aws_security_group.elb (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
aws_security_group.instance - *terraform.NodeApplyableResourceInstance
  aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
aws_security_group.instance (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
data.aws_availability_zones.all (prepare state) - *terraform.NodeApplyableResource
  provider.aws - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
  output.elb_dns_name - *terraform.NodeApplyableOutput
  var.contador - *terraform.NodeRootVariable
  var.public_key_path - *terraform.NodeRootVariable
output.elb_dns_name - *terraform.NodeApplyableOutput
  aws_elb.example - *terraform.NodeApplyableResourceInstance
provider.aws - *terraform.NodeApplyableProvider
  var.accessKey - *terraform.NodeRootVariable
  var.secretAccessKey - *terraform.NodeRootVariable
provider.aws (close) - *terraform.graphNodeCloseProvider
  aws_autoscaling_group.example - *terraform.NodeApplyableResourceInstance
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aws (close) - *terraform.graphNodeCloseProvider
var.accessKey - *terraform.NodeRootVariable
var.amis - *terraform.NodeRootVariable
var.contador - *terraform.NodeRootVariable
var.key_name - *terraform.NodeRootVariable
var.public_key_path - *terraform.NodeRootVariable
var.region - *terraform.NodeRootVariable
var.secretAccessKey - *terraform.NodeRootVariable
------
2019/01/15 16:59:59 [DEBUG] Starting graph walk: walkApply
2019/01/15 16:59:59 [TRACE] dag/walk: updating graph
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "root"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "provider.aws (close)"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_autoscaling_group.example (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_elb.example"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "var.key_name"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "output.elb_dns_name"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_security_group.instance (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_security_group.elb (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_autoscaling_group.example"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_elb.example (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "data.aws_availability_zones.all (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_launch_configuration.example"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_security_group.instance"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "var.amis"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_security_group.elb"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "var.public_key_path"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "var.secretAccessKey"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "var.region"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "provider.aws"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "aws_launch_configuration.example (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "var.contador"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "var.accessKey"
2019/01/15 16:59:59 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "output.elb_dns_name"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_autoscaling_group.example (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example (prepare state)" waiting on "provider.aws"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_launch_configuration.example (prepare state)" waiting on "provider.aws"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aws_autoscaling_group.example"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "aws_launch_configuration.example (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "aws_security_group.instance"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "aws_elb.example (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.contador"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "output.elb_dns_name" waiting on "aws_elb.example"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "var.public_key_path"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "data.aws_availability_zones.all (prepare state)" waiting on "provider.aws"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "data.aws_availability_zones.all (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.secretAccessKey"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_security_group.elb (prepare state)" waiting on "provider.aws"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_elb.example" waiting on "aws_security_group.elb"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_security_group.instance (prepare state)" waiting on "provider.aws"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.amis"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_elb.example"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_security_group.elb" waiting on "aws_security_group.elb (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.region"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "root" waiting on "provider.aws (close)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_launch_configuration.example" waiting on "var.key_name"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_elb.example (prepare state)" waiting on "provider.aws"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_security_group.instance" waiting on "aws_security_group.instance (prepare state)"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "aws_autoscaling_group.example" waiting on "aws_launch_configuration.example"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "provider.aws" waiting on "var.accessKey"
2019/01/15 16:59:59 [TRACE] dag/walk: added edge: "provider.aws (close)" waiting on "aws_autoscaling_group.example"
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "output.elb_dns_name", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_autoscaling_group.example (prepare state)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_launch_configuration.example", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_elb.example", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "provider.aws (close)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_launch_configuration.example (prepare state)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_security_group.instance (prepare state)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_security_group.instance", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_autoscaling_group.example", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "provider.aws", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_elb.example (prepare state)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "data.aws_availability_zones.all (prepare state)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_security_group.elb (prepare state)", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: dependencies changed for "aws_security_group.elb", sending new deps
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "var.key_name"
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "var.contador"
2019/01/15 16:59:59 [TRACE] vertex "var.key_name": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:59 [TRACE] vertex "var.contador": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:59 [TRACE] vertex "var.key_name": visit complete
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "var.accessKey"
2019/01/15 16:59:59 [TRACE] vertex "var.accessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "var.amis"
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "var.region"
2019/01/15 16:59:59 [TRACE] vertex "var.region": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:59 [TRACE] vertex "var.region": visit complete
2019/01/15 16:59:59 [TRACE] vertex "var.contador": visit complete
2019/01/15 16:59:59 [TRACE] vertex "var.amis": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:59 [TRACE] vertex "var.amis": visit complete
2019/01/15 16:59:59 [TRACE] vertex "var.accessKey": visit complete
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "var.public_key_path"
2019/01/15 16:59:59 [TRACE] vertex "var.public_key_path": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:59 [TRACE] vertex "var.public_key_path": visit complete
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "var.secretAccessKey"
2019/01/15 16:59:59 [TRACE] vertex "var.secretAccessKey": starting visit (*terraform.NodeRootVariable)
2019/01/15 16:59:59 [TRACE] vertex "var.secretAccessKey": visit complete
2019/01/15 16:59:59 [TRACE] dag/walk: visiting "provider.aws"
2019/01/15 16:59:59 [TRACE] vertex "provider.aws": starting visit (*terraform.NodeApplyableProvider)
2019/01/15 16:59:59 [TRACE] vertex "provider.aws": evaluating
2019/01/15 16:59:59 [TRACE] [walkApply] Entering eval tree: provider.aws
2019/01/15 16:59:59 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 16:59:59 [TRACE] <root>: eval: *terraform.EvalInitProvider
2019-01-15T16:59:59.931-0500 [DEBUG] plugin: starting plugin: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe args=[C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe]
2019-01-15T16:59:59.980-0500 [DEBUG] plugin: plugin started: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=9260
2019-01-15T16:59:59.980-0500 [DEBUG] plugin: waiting for RPC address: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe
2019-01-15T17:00:00.043-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: plugin address: address=127.0.0.1:10000 network=tcp timestamp=2019-01-15T17:00:00.043-0500
2019-01-15T17:00:00.043-0500 [DEBUG] plugin: using plugin: version=5
2019/01/15 17:00:00 [TRACE] BuiltinEvalContext: Initialized "aws" provider for provider.aws
2019/01/15 17:00:00 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:00 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 17:00:00 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 17:00:00 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 17:00:00 [TRACE] <root>: eval: *terraform.EvalOpFilter
2019/01/15 17:00:00 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 17:00:00 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2019/01/15 17:00:00 [TRACE] buildProviderConfig for provider.aws: using explicit config only
2019/01/15 17:00:00 [TRACE] GRPCProvider: GetSchema
2019/01/15 17:00:00 [TRACE] GRPCProvider: Configure
2019-01-15T17:00:00.122-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [INFO] No assume_role block read from configuration
2019-01-15T17:00:00.122-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [INFO] Building AWS region structure
2019-01-15T17:00:00.122-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [INFO] Building AWS auth structure
2019-01-15T17:00:00.122-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [INFO] Setting AWS metadata API timeout to 100ms
2019-01-15T17:00:00.377-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [INFO] Ignoring AWS metadata API endpoint at default location as it doesn't return any instance-id
2019-01-15T17:00:00.377-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [INFO] AWS Auth provider used: "StaticProvider"
2019-01-15T17:00:00.377-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [INFO] Initializing DeviceFarm SDK connection
2019-01-15T17:00:00.377-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:00 [DEBUG] Trying to get account information via sts:GetCallerIdentity
2019/01/15 17:00:01 [TRACE] [walkApply] Exiting eval tree: provider.aws
2019/01/15 17:00:01 [TRACE] vertex "provider.aws": visit complete
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "aws_security_group.elb (prepare state)"
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.elb (prepare state)": starting visit (*terraform.NodeApplyableResource)
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.elb (prepare state)": evaluating
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: aws_security_group.elb (prepare state)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 17:00:01 [TRACE] [walkApply] Exiting eval tree: aws_security_group.elb (prepare state)
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.elb (prepare state)": visit complete
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "aws_security_group.elb"
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.elb": starting visit (*terraform.NodeApplyableResourceInstance)
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "aws_launch_configuration.example (prepare state)"
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.elb": evaluating
2019/01/15 17:00:01 [TRACE] vertex "aws_launch_configuration.example (prepare state)": starting visit (*terraform.NodeApplyableResource)
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: aws_security_group.elb
2019/01/15 17:00:01 [TRACE] vertex "aws_launch_configuration.example (prepare state)": evaluating
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: aws_launch_configuration.example (prepare state)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadDiff
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "aws_security_group.instance (prepare state)"
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.instance (prepare state)": starting visit (*terraform.NodeApplyableResource)
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.instance (prepare state)": evaluating
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: aws_security_group.instance (prepare state)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "aws_elb.example (prepare state)"
2019/01/15 17:00:01 [TRACE] [walkApply] Exiting eval tree: aws_security_group.instance (prepare state)
2019/01/15 17:00:01 [TRACE] vertex "aws_elb.example (prepare state)": starting visit (*terraform.NodeApplyableResource)
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.instance (prepare state)": visit complete
2019/01/15 17:00:01 [TRACE] vertex "aws_elb.example (prepare state)": evaluating
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: aws_elb.example (prepare state)
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "data.aws_availability_zones.all (prepare state)"
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "aws_security_group.instance"
2019/01/15 17:00:01 [TRACE] vertex "data.aws_availability_zones.all (prepare state)": starting visit (*terraform.NodeApplyableResource)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 17:00:01 [TRACE] vertex "data.aws_availability_zones.all (prepare state)": evaluating
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: data.aws_availability_zones.all (prepare state)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.instance": starting visit (*terraform.NodeApplyableResourceInstance)
2019/01/15 17:00:01 [TRACE] [walkApply] Exiting eval tree: aws_launch_configuration.example (prepare state)
2019/01/15 17:00:01 [TRACE] vertex "aws_launch_configuration.example (prepare state)": visit complete
2019/01/15 17:00:01 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.elb
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:01 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:01 [TRACE] [walkApply] Exiting eval tree: aws_elb.example (prepare state)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 17:00:01 [TRACE] EvalReadState: reading state for aws_security_group.elb
2019/01/15 17:00:01 [TRACE] vertex "aws_elb.example (prepare state)": visit complete
2019/01/15 17:00:01 [TRACE] [walkApply] Exiting eval tree: data.aws_availability_zones.all (prepare state)
2019/01/15 17:00:01 [TRACE] vertex "data.aws_availability_zones.all (prepare state)": visit complete
2019/01/15 17:00:01 [TRACE] dag/walk: visiting "aws_autoscaling_group.example (prepare state)"
2019/01/15 17:00:01 [TRACE] vertex "aws_autoscaling_group.example (prepare state)": starting visit (*terraform.NodeApplyableResource)
2019/01/15 17:00:01 [TRACE] vertex "aws_security_group.instance": evaluating
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: aws_security_group.instance
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadDiff
2019/01/15 17:00:01 [TRACE] EvalReadState: no state present for aws_security_group.elb
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadDiff
2019/01/15 17:00:01 [TRACE] vertex "aws_autoscaling_group.example (prepare state)": evaluating
2019/01/15 17:00:01 [TRACE] [walkApply] Entering eval tree: aws_autoscaling_group.example (prepare state)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2019/01/15 17:00:01 [TRACE] [walkApply] Exiting eval tree: aws_autoscaling_group.example (prepare state)
2019/01/15 17:00:01 [TRACE] vertex "aws_autoscaling_group.example (prepare state)": visit complete
2019/01/15 17:00:01 [TRACE] EvalReadDiff: Read Create change from plan for aws_security_group.elb
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 17:00:01 [TRACE] EvalReadDiff: Read Update change from plan for aws_security_group.instance
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:01 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 17:00:01 [TRACE] EvalReadState: reading state for aws_security_group.instance
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadDiff
2019/01/15 17:00:01 [TRACE] EvalReadDiff: Read Update change from plan for aws_security_group.instance
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 17:00:01 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 17:00:01 [TRACE] GRPCProvider: PlanResourceChange
2019-01-15T17:00:01.462-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:01 [DEBUG] Instance Diff is nil in SimpleDiff()
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2019/01/15 17:00:01 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Update) matches planned change (action Update)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 17:00:01 [TRACE] EvalReadState: reading state for aws_security_group.instance
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:01 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalApplyPre
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalApply
2019/01/15 17:00:01 [DEBUG] aws_security_group.instance: applying the planned Update change
2019/01/15 17:00:01 [TRACE] GRPCProvider: ApplyResourceChange
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2019/01/15 17:00:01 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 17:00:01 [TRACE] EvalReadState: reading state for aws_security_group.elb
2019/01/15 17:00:01 [TRACE] EvalReadState: no state present for aws_security_group.elb
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:01 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalApplyPre
2019/01/15 17:00:01 [TRACE] <root>: eval: *terraform.EvalApply
2019/01/15 17:00:01 [DEBUG] aws_security_group.elb: applying the planned Create change
2019/01/15 17:00:01 [TRACE] GRPCProvider: ApplyResourceChange
2019-01-15T17:00:01.467-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:01 [DEBUG] Security Group create configuration: {
2019-01-15T17:00:01.467-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe:   Description: "Managed by Terraform",
2019-01-15T17:00:01.467-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe:   GroupName: "terraform-example-elb_4"
2019-01-15T17:00:01.467-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: }
2019-01-15T17:00:02.143-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:02 [INFO] Security Group ID: sg-05f71153842d8db6a
2019-01-15T17:00:02.143-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:02 [DEBUG] Waiting for Security Group (sg-05f71153842d8db6a) to exist
2019-01-15T17:00:02.143-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 2019/01/15 17:00:02 [DEBUG] Waiting for state to become: [exists]
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 17:00:02 [TRACE] EvalWriteState: writing current state object for aws_security_group.instance
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2019/01/15 17:00:02 [TRACE] EvalApplyProvisioners: aws_security_group.instance is not freshly-created, so no provisioning is required
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 17:00:02 [TRACE] EvalWriteState: writing current state object for aws_security_group.instance
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApplyPost
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2019/01/15 17:00:02 [TRACE] [walkApply] Exiting eval tree: aws_security_group.instance
2019/01/15 17:00:02 [TRACE] vertex "aws_security_group.instance": visit complete
2019/01/15 17:00:02 [TRACE] dag/walk: visiting "aws_launch_configuration.example"
2019/01/15 17:00:02 [TRACE] vertex "aws_launch_configuration.example": starting visit (*terraform.NodeApplyableResourceInstance)
2019/01/15 17:00:02 [TRACE] vertex "aws_launch_configuration.example": evaluating
2019/01/15 17:00:02 [TRACE] [walkApply] Entering eval tree: aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalSequence
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalReadDiff
2019/01/15 17:00:02 [TRACE] EvalReadDiff: Read Create change from plan for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 17:00:02 [TRACE] EvalReadState: reading state for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] EvalReadState: no state present for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalReadDiff
2019/01/15 17:00:02 [TRACE] EvalReadDiff: Read Create change from plan for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalDiff
2019/01/15 17:00:02 [TRACE] GetResourceInstance: aws_security_group.instance is a single instance
2019/01/15 17:00:02 [TRACE] GRPCProvider: PlanResourceChange
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2019/01/15 17:00:02 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalGetProvider
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalReadState
2019/01/15 17:00:02 [TRACE] EvalReadState: reading state for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] EvalReadState: no state present for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: terraform.EvalNoop
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApplyPre
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApply
2019/01/15 17:00:02 [TRACE] GetResourceInstance: aws_security_group.instance is a single instance
2019/01/15 17:00:02 [DEBUG] aws_launch_configuration.example: applying the planned Create change
2019/01/15 17:00:02 [TRACE] GRPCProvider: ApplyResourceChange
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: panic: can't use ElementIterator on null value
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: goroutine 44 [running]:
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: github.com/zclconf/go-cty/cty.Value.ElementIterator(0x3585f00, 0xc0004e23d0, 0x0, 0x0, 0x32aa373, 0x16)
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/github.com/zclconf/go-cty/cty/value_ops.go:858 +0xda
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: github.com/hashicorp/terraform/terraform.newResourceConfigShimmedComputedKeys(0x3585ec0, 0xc00014c0b0, 0x2b861c0, 0xc000791a10, 0xc0004e25f0, 0x0, 0x0, 0xbf6f46, 0x2b83ca0, 0xc000791b00)
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/github.com/hashicorp/terraform/terraform/resource.go:298 +0xa40
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: github.com/hashicorp/terraform/terraform.NewResourceConfigShimmed(0x3585ec0, 0xc00014c0b0, 0x2b861c0, 0xc000791a10, 0xc0004e25f0, 0xc0008291d0)
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/github.com/hashicorp/terraform/terraform/resource.go:239 +0x113
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: github.com/hashicorp/terraform/helper/schema.diffFromValues(0x3585ec0, 0xc00014c080, 0x0, 0x0, 0x3585ec0, 0xc00014c0b0, 0x2b861c0, 0xc000791a10, 0xc000469300, 0x0, ...)
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/github.com/hashicorp/terraform/helper/schema/shims.go:30 +0xc5
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: github.com/hashicorp/terraform/helper/schema.DiffFromValues(0x3585ec0, 0xc00014c080, 0x0, 0x0, 0x3585ec0, 0xc00014c0b0, 0x2b861c0, 0xc000791a10, 0xc000469300, 0x0, ...)
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/github.com/hashicorp/terraform/helper/schema/shims.go:18 +0xa7
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: github.com/hashicorp/terraform/helper/plugin.(*GRPCProviderServer).ApplyResourceChange(0xc0000ab020, 0x3584dc0, 0xc0007b3ec0, 0xc0000550e0, 0xc0000ab020, 0xc0007b3d70, 0x2c5ba00)
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/github.com/hashicorp/terraform/helper/plugin/grpc_provider.go:584 +0x4ca
2019-01-15T17:00:02.810-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: github.com/hashicorp/terraform/plugin/proto._Provider_ApplyResourceChange_Handler(0x31a9b00, 0xc0000ab020, 0x3584dc0, 0xc0007b3ec0, 0xc000168b60, 0x0, 0x0, 0x0, 0xc000262fd0, 0xc0008366c0)
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/github.com/hashicorp/terraform/plugin/proto/plugin.pb.go:2974 +0x245
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: google.golang.org/grpc.(*Server).processUnaryRPC(0xc000136180, 0x358dca0, 0xc000137200, 0xc000832000, 0xc00020fb00, 0x5880700, 0x0, 0x0, 0x0)
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/google.golang.org/grpc/server.go:982 +0x4d4
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: google.golang.org/grpc.(*Server).handleStream(0xc000136180, 0x358dca0, 0xc000137200, 0xc000832000, 0x0)
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/google.golang.org/grpc/server.go:1208 +0x130f
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc0000a6f10, 0xc000136180, 0x358dca0, 0xc000137200, 0xc000832000)
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/google.golang.org/grpc/server.go:686 +0xa6
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: created by google.golang.org/grpc.(*Server).serveStreams.func1
2019-01-15T17:00:02.811-0500 [DEBUG] plugin.terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe: 	/opt/gopath/src/github.com/terraform-providers/terraform-provider-aws/vendor/google.golang.org/grpc/server.go:684 +0xa8
2019/01/15 17:00:02 [DEBUG] aws_security_group.elb: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2019/01/15 17:00:02 [TRACE] EvalMaybeTainted: aws_security_group.elb encountered an error during creation, so it is now marked as tainted
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 17:00:02 [TRACE] EvalWriteState: removing state object for aws_security_group.elb
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2019/01/15 17:00:02 [TRACE] EvalApplyProvisioners: aws_security_group.elb has no state, so skipping provisioners
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2019/01/15 17:00:02 [TRACE] EvalMaybeTainted: aws_security_group.elb encountered an error during creation, so it is now marked as tainted
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 17:00:02 [TRACE] EvalWriteState: removing state object for aws_security_group.elb
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApplyPost
2019/01/15 17:00:02 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2019/01/15 17:00:02 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2019/01/15 17:00:02 [TRACE] [walkApply] Exiting eval tree: aws_security_group.elb
2019/01/15 17:00:02 [TRACE] vertex "aws_security_group.elb": visit complete
2019/01/15 17:00:02 [TRACE] dag/walk: upstream of "aws_elb.example" errored, so skipping
2019/01/15 17:00:02 [TRACE] dag/walk: upstream of "output.elb_dns_name" errored, so skipping
2019/01/15 17:00:02 [DEBUG] aws_launch_configuration.example: apply errored, but we're indicating that via the Error pointer rather than returning it: rpc error: code = Unavailable desc = transport is closing
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2019/01/15 17:00:02 [TRACE] EvalMaybeTainted: aws_launch_configuration.example encountered an error during creation, so it is now marked as tainted
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 17:00:02 [TRACE] EvalWriteState: removing state object for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2019/01/15 17:00:02 [TRACE] EvalApplyProvisioners: aws_launch_configuration.example has no state, so skipping provisioners
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2019/01/15 17:00:02 [TRACE] EvalMaybeTainted: aws_launch_configuration.example encountered an error during creation, so it is now marked as tainted
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteState
2019/01/15 17:00:02 [TRACE] EvalWriteState: removing state object for aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalIf
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2019/01/15 17:00:02 [TRACE] <root>: eval: *terraform.EvalApplyPost
2019/01/15 17:00:02 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: rpc error: code = Unavailable desc = transport is closing
2019/01/15 17:00:02 [ERROR] <root>: eval: *terraform.EvalSequence, err: rpc error: code = Unavailable desc = transport is closing
2019/01/15 17:00:02 [TRACE] [walkApply] Exiting eval tree: aws_launch_configuration.example
2019/01/15 17:00:02 [TRACE] vertex "aws_launch_configuration.example": visit complete
2019/01/15 17:00:02 [TRACE] dag/walk: upstream of "aws_autoscaling_group.example" errored, so skipping
2019/01/15 17:00:02 [TRACE] dag/walk: upstream of "provider.aws (close)" errored, so skipping
2019/01/15 17:00:02 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2019/01/15 17:00:02 [TRACE] dag/walk: upstream of "root" errored, so skipping
2019-01-15T17:00:02.830-0500 [DEBUG] plugin: plugin process exited: path=C:\ProgramData\chocolatey\lib\terraform\tools\terraform-provider-aws_v1.40.0-5-g4f24bc8b7_x4.exe pid=9260 error="exit status 2"
